@page "/books"
@using Microsoft.AspNetCore.Authorization
@rendermode InteractiveServer
@attribute [Authorize(Policy = "AdminOnly")]
@inject IEntityService<Book> BookService
@inject NavigationManager NavigationManager
<h3>Books</h3>
<div>
    @if (books == null)
    {
        <span>Loading...</span>
    }
    else if (books.Count == 0)
    {
        <span>No books found.</span>
    }
    else
    {
        <table>


            @foreach (var book in books)
            {
                <div class="col-md-4 mb-4">
                    <div class="card">
                        <div class="card-body">
                            <h5 class="card-title">@book.Title</h5>
                            <h6 class="card-subtitle mb-2 text-muted">Author ID: @book.AuthorID</h6>
                            <p class="card-text">
                                <strong>ISBN:</strong> @book.ISBN<br />
                                <strong>Genre ID:</strong> @book.GenreID<br />
                                <strong>Publisher ID:</strong> @book.PublisherID<br />
                                <strong>Publish Date:</strong> @book.PublishDate.ToShortDateString()<br />
                                <strong>Quantity Available:</strong> @book.QuantityAvailable<br />
                                <strong>Description:</strong> @book.Description
                            </p>
                        </div>
                    </div>
                </div>
            }
        </table>
    }
    <div class="row">
        <button class="btn btn-primary" @onclick="CreateBook">Create book</button>
    </div>
    

</div>

@code {
    List<Book>? books = null;
    protected override async Task OnInitializedAsync()
    {
        books = await BookService.GetAll();
    }
    private void CreateBook(MouseEventArgs e)
    {
        NavigationManager.NavigateTo("/edit-book/");
    }
}

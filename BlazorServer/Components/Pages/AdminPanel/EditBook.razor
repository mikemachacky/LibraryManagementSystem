@page "/edit-book"
@page "/edit-book/{id:int}"
@using Microsoft.AspNetCore.Authorization
@using BlazorServer.Model
@attribute [Authorize(Policy = "AdminOnly")]
@rendermode InteractiveServer
@inject IEntityService<Book> BookService
@inject IEntityService<Author> AuthorService
@inject IEntityService<Genre> GenreService
@inject IEntityService<Publisher> PublisherService


<div class="row col-md-6 offset-3">
    <h3>Add New Book</h3>
<EditForm Model="@newBook" OnSubmit="HandleSubmit" FormName="editBook">
     

            <div class="form-group">
                <label for="title">Title:</label>
                <input type="text" class="form-control" id="title" @bind="newBook.Title" required />
            </div>
            <div class="form-group">
                <label for="author">Author:</label>
                <select class="form-control" id="author" @bind="newBook.AuthorID" required>
                    <option value="">-- Select Author --</option>
                @if (authors.Count > 0)
                {
                    @foreach (var author in authors)
                    {
                        <option value="@author.AuthorID">
                            @author.Name
                        </option>
                    }
                }
                else
                {
                    <label>No Authors found.</label>
                }
                    
                </select>
            </div>
            <div class="form-group">
                <label for="genre">Genre:</label>
                <select class="form-control" id="genre" @bind="newBook.GenreID" required>
                    <option value="">-- Select Genre --</option>
                @if (genres.Count > 0)
                {
                    @foreach (var genre in genres)
                    {
                        <option value="@genre.GenreID">
                            @genre.Name
                        </option>
                    }
                }
                else
                {
                    <label>No Genres found</label>
                }
                    
                </select>
            </div>
            <div class="form-group">
                <label for="publisher">Publisher:</label>
                <select class="form-control" id="publisher" @bind="newBook.PublisherID" required>
                    <option value="">-- Select Publisher --</option>
                @if (publishers.Count > 0)
                {
                    @foreach (var publisher in publishers)
                    {
                        <option value="@publisher.PublisherID">
                            @publisher.Name
                        </option>
                    }
                }
                else
                {
                    <label>No publishers found.</label>
                }
                
                </select>
            </div>
            <div class="form-group">
                <label for="isbn">ISBN:</label>
                <input type="text" class="form-control" id="isbn" @bind="newBook.ISBN" required />
            </div>
            <div class="form-group">
                <label for="publishDate">Publish Date:</label>
                <input type="date" class="form-control" id="publishDate" @bind="newBook.PublishDate" required />
            </div>
            <div class="form-group">
                <label for="quantity">Quantity Available:</label>
                <input type="number" class="form-control" id="quantity" @bind="newBook.QuantityAvailable" required />
            </div>
            <div class="form-group">
                <label for="description">Description:</label>
                <textarea class="form-control" id="description" @bind="newBook.Description"></textarea>
            </div>
            <button type="submit" class="btn btn-primary">Add Book</button>
</EditForm>
</div>
@code {
    [Parameter]
    public int Id { get; set; }

    private Book newBook = new Book();
    private List<Author> authors = new();
    private List<Genre> genres = new();
    private List<Publisher> publishers = new();


    protected override async Task OnInitializedAsync()
    {
        authors = await AuthorService.GetAll();
        genres = await GenreService.GetAll();
        publishers = await PublisherService.GetAll();
    }
    async Task HandleSubmit()
    {
        await BookService.Add(newBook);
    }
}

@page "/reviews"
@using BlazorServer.Model
@inject IEntityService<Review> ReviewService
@inject IJSRuntime JSRuntime
@rendermode InteractiveServer
@using Microsoft.AspNetCore.Authorization
@using BlazorServer.Components.Pages.AdminPanel.Buttons
@attribute [Authorize(Policy = "AdminOnly")]

<div class="container mt-2">
    <div class="row mb-3">
      
        <div class="col-12">
            <h3 class="mt-3">Reviews</h3>
        </div>
    </div>
    @if (reviews == null)
    {
        <div class="row">
            <div class="col-12">
                <span>Loading...</span>
            </div>
        </div>
    }
    else if (reviews.Count == 0)
    {
        <div class="row">
            <div class="col-12">
                <span>No reviews found.</span>
            </div>
        </div>
    }
    else
    {
        <div class="row">
            @foreach (var review in reviews)
            {
                <div class="col-md-4 col-sm-10 offset-md-0 offset-sm-1 mb-4 d-flex align-items-stretch">
                    <div class="card h-100">
                        <div class="card-body">
                            <h5 class="card-title">@review.Book.Title</h5>
                            <h6 class="card-subtitle mb-2 text-muted">Reviewer: @review.User.UserName</h6>
                            <h6 class="card-subtitle mb-2 text-muted">User ID: @review.UserID</h6>
                            <p class="card-text">
                                <strong>Rating:</strong> @review.Rating<br />
                                <strong>Review:</strong> @review.ReviewText<br />
                                <strong>Review Date:</strong> @review.ReviewDate.ToShortDateString()
                            </p>
                            <div class="d-flex justify-content-start">
                                <GenericEditButton TEntity="Review" Id="@review.ReviewID" EditUrlPattern="/edit-review/{0}" />
                                <span class="m-1"></span>
                                <GenericDeleteButton TEntity="Review" Id="@review.ReviewID" />
                            </div>
                        </div>
                    </div>
                </div>
            }
        </div>
    }
</div>

@code {
    private List<Review> reviews;

    protected override async Task OnInitializedAsync()
    {
        reviews = await ReviewService.GetAll();
    }
}